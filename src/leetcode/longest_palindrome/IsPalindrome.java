package src.leetcode.longest_palindrome;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static src.leetcode.longest_palindrome.IsPalindrome.isPalindrome;

import org.junit.jupiter.api.Test;

public class IsPalindrome {

  public static void main(String[] args) {

  }

  static boolean isPalindrome(String s) {
    char[] letters = s.toCharArray();
    for (int i = 0; i < letters.length/ 2; i++) {
      if (letters[i] != letters[letters.length - i -1]) {
        return false;
      }
    }
    return true;
  }
}

class TestIsPalindrome {

  @Test
  void test_() {
    assertTrue(isPalindrome("aa"));
    assertTrue(isPalindrome("a"));
    assertTrue(isPalindrome(""));
    assertTrue(isPalindrome("aba"));
    assertTrue(isPalindrome("abcba"));
    assertFalse(isPalindrome("abda"));
    assertFalse(isPalindrome(

  }
}
